--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (0==v17) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v62=v2(v0(v30,16));if v19 then local v75=v5(v62,v19);v19=nil;return v75;else return v62;end end end);v20=nil;v17=1;end if (v17==3) then function v24()local v38=v23();local v39=v23();return (( -(9 -7) * v20(v39,53 -21)) + 1 + 0) * ((2 -0)^(v20(v39,32 -11,31) -((2236 -717) -(1747 -(225 + 1026))))) * ((((v20(v39,4 -(1 + 2),1294 -(412 + 862)) * (2^(41 -9))) + v38)/(2^(100 -48))) + 1 + (0 -0));end v25=nil;function v25(v31)local v40;if  not v31 then v31=v23();if (v31==(81 -(80 + 1))) then return "";end end v40=v3(v15,v18,(v18 + v31) -(1 + 0));v18=v18 + v31;local v41={};for v60=1 -0, #v40 do v41[v60]=v2(v1(v3(v40,v60,v60)));end return v6(v41);end v26=v23;v17=4;end if (v17==2) then function v22()local v42,v43=v1(v15,v18,v18 + 2 + 0);v18=v18 + (1671 -(1002 + 667));return (v43 * (436 -180)) + v42;end v23=nil;function v23()local v44=342 -(338 + 4);local v45;local v46;local v47;local v48;while true do if (v44==(0 -0)) then v45,v46,v47,v48=v1(v15,v18,v18 + 3);v18=v18 + (1289 -(144 + 1141));v44=1 -0;end if (v44==(2 -1)) then return (v48 * (13488832 + 3288384)) + (v47 * ((220432 -153730) -(636 + 530))) + (v46 * (979 -(123 + 600))) + v45;end end end v24=nil;v17=3;end if (v17==1) then function v20(v32,v33,v34)if v34 then local v63=(v32/(2^(v33-(1 -(0 -0)))))%((848 -(425 + 421))^(((v34-(1 -0)) -(v33-(1 + 0))) + (435 -(211 + 223))));return v63-(v63%1);else local v64=2^(v33-(1 + 0));return (((v32%(v64 + v64))>=v64) and (289 -(147 + 141))) or (0 -(1973 -(7 + 1966)));end end v21=nil;function v21()local v49=v1(v15,v18,v18);v18=v18 + 1;return v49;end v22=nil;v17=2;end if (v17==5) then v29=nil;function v29(v35,v36,v37)local v50=v35[1];local v51=v35[2];local v52=v35[3];return function(...)local v65=0;local v66;local v67;local v68;local v69;local v70;while true do if (v65==0) then v66=1;v67= -1;v65=1;end if (v65==3) then A,B=v27(v10(v70));if  not A[1] then local v79=v35[4][v66] or "?";error("Script error at ["   .. v79   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (v65==2) then v70=nil;function v70()local v80=v50;local v81=Const;local v82=v51;local v83=v52;local v84=v27;local v85={};local v86={};local v87={};for v99=0,v69 do if ((v99>=v83) or ((1861 + (4904 -3645))>=3391)) then v85[v99-v83]=v68[v99 + 1];else v87[v99]=v68[v99 + (3 -2) + 0];end end local v88=(v69-v83) + 1;local v89;local v90;while true do local v100=0 -0;local v101;while true do if ((v100==(0 -(288 -(51 + 237)))) or ((3777 -(46 + 58))<(9493 -(20822 -14915)))) then v101=0 -0;while true do if ((v101==((0 -0) + 0)) or ((2071 -584)<=(1245 -(151 + (2154 -(976 + 545)))))) then local v110=0 + 0;while true do if (((3193 + 1001)>(968 + 928)) and (v110==(2 -1))) then v101=1;break;end if ((v110==0) or ((415 + 711)>=(11045 -7901))) then v89=v80[v66];v90=v89[1 + 0];v110=642 -(78 + 563);end end end if ((((10434 -6900) -1175)<=(1503 + (7590 -4265))) and (v101==1)) then if ((v90<=(11 + 3)) or ((2931 + 927)<=(4579 -2944))) then if (((771 + 867)==(2005 -(363 + 4))) and (v90<=6)) then if (((21 + 69 + 217 + 656)==963) and (v90<=2)) then if ((v90<=0) or ((5429 -(856 + 1128))==(2944 + 1543))) then v87[v89[(1329 -(312 + 198)) -(127 + 391 + 299)]]=v36[v89[4 -1]];elseif (((879 + 1694)>((641 -405) -104)) and (v90==(1270 -(17 + 1252)))) then local v126=0 + 0;local v127;local v128;local v129;while true do if ((v126==0) or (1519==(3767 -1213))) then v127=0;v128=nil;v126=2 -1;end if ((v126==(443 -(393 + 49))) or ((4032 -2089)==((4820 -(92 + 688)) -(1202 + 404)))) then v129=nil;while true do if ((v127==(736 -(214 + 521))) or ((650 + 1730)==(2372 + 650))) then v87[v128 + 1 + 0 + 0]=v129;v87[v128]=v129[v89[1809 -(873 + 932)]];break;end if (((12807 -9642)>=(8522 -6723)) and (v127==((1755 -599) -(89 + 1067)))) then local v225=0 + 0;local v226;while true do if ((4651>(10577 -7881)) and (v225==(0 + 0))) then v226=1864 -(421 + 1443);while true do if ((0==v226) or ((9992 -5376)<(6142 -(1174 + 371)))) then v128=v89[1 + 1];v129=v87[v89[3]];v226=1;end if ((v226==1) or ((1490 -(110 + 266))>(12192 -8138))) then v127=(589 -338) -(103 + 147);break;end end break;end end end end break;end end else v87[v89[1621 -(108 + 1511)]]=v37[v89[8 -5]];end elseif (((4874 -(190 + 104))>(10582 -6112)) and (v90<=(1104 -(680 + 420)))) then if (((250 + 68)<(2319 + (9361 -7151))) and (v90>(854 -(77 + 774)))) then v87[v89[2]]=v87[v89[8 -5]];else local v132=1946 -(480 + 1466);local v133;local v134;while true do if ((324==(231 + 93)) and (v132==1)) then while true do if (((4580 -1579)<=3075) and (v133==(0 + (1657 -(1548 + 109))))) then v134=v89[2 + 0];v87[v134]=v87[v134](v87[v134 + (1 -0)]);break;end end break;end if (((1721 + (2568 -(149 + 1556)))==(408 + 2176)) and (v132==((190 + 162) -(51 + (1571 -(679 + 591)))))) then local v194=0 -0;while true do if ((v194==(0 -0)) or ((3199 -(886 + 599))<1621)) then v133=0;v134=nil;v194=2 -1;end if (((183 + 3191)>=(1227 + 1110)) and (v194==(1 + 0 + 0))) then v132=1;break;end end end end end elseif ((v90==(3 + 2)) or (4986==(6107 -(1209 + 628)))) then local v135=0 + 0;local v136;while true do if ((v135==(376 -(246 + 130))) or (((1753 -(1610 + 110)) + 84)>=(1680 -((771 -449) + 383)))) then v136=v89[7 -5];v87[v136]=v87[v136]();break;end end else v87[v89[2]]=v89[7 -4];end elseif ((v90<=(1804 -((1788 -(249 + 34)) + 289))) or ((1802 -((1505 -1106) + 410))>(3145 + 80))) then if ((v90<=((33 -19) -6)) or (4291==(2529 + 762))) then if ((v90>(6 + 1)) or (2183>(14904 -10825))) then local v138=0;local v139;local v140;local v141;local v142;while true do if ((v138==(0 + 0)) or ((11868 -7301)<=(1659 -(112 + 1266)))) then v139=v89[3 -1];v140,v141=v84(v87[v139](v87[v139 + ((550 -(11 + 538)) -0)]));v138=956 -(255 + 700);end if (((5285 -(223 + 200))==(12866 -8004)) and (v138==(1497 -(1363 + 132)))) then for v200=v139,v67 do local v201=0 -0;local v202;while true do if ((((9989 + 2593) -9395)<=3221) and (v201==(0 -0))) then v202=0;while true do if (((791 -(561 + 230))==v202) or ((4549 -3354)==(1080 -(23 + 15)))) then v142=v142 + (707 -(360 + 346));v87[v200]=v140[v142];break;end end break;end end end break;end if (((413 + 7)<(3998 -(44 + 608))) and (v138==(2 -1))) then v67=(v141 + v139) -(1 + 0);v142=0 -0;v138=5 -3;end end else v36[v89[1844 -(1468 + 373)]]=v87[v89[1008 -(276 + 730)]];end elseif (((1091 + 1886)>(1032 + 1926)) and (v90==(3 + 6))) then v87[v89[2 + 0]]=v89[3]~=(0 -0);else v87[v89[2]]=v87[v89[4 -1]][v89[1441 -(65 + 1372)]];end elseif ((v90<=(82 -(30 + 40))) or ((5236 -(93 + 1388))<(498 -(186 + 19)))) then if (((304 -160)==(262 -118)) and (v90==(11 + 0))) then local v146=0;local v147;local v148;while true do if ((v146==(0 + 0)) or ((4287 -(479 + 338))<1475)) then v147=0 -(0 -0);v148=nil;v146=1 + 0;end if (((2763 + 1964)>=(5810 -3889)) and (1==v146)) then while true do if ((v147==(1967 -(288 + 1679))) or ((5181 -(1017 + (2490 -1863)))<(101 + 1630))) then v148=v89[5 -3];v87[v148]=v87[v148](v12(v87,v148 + 1 + 0,v89[169 -(110 + 56)]));break;end end break;end end else local v149=0 -0;local v150;local v151;while true do if ((v149==(989 -(657 + 332))) or (196>=(804 -(81 + 72)))) then v150=0 + 0;v151=nil;v149=2 -1;end if ((v149==(3 -(2 -0))) or ((1946 + 269)==(13 + 26 + 0))) then while true do if (((3957 -(693 + 866))>=(270 + 294 + 153)) and (v150==0)) then v151=v89[1 + (2 -1)];v87[v151](v87[v151 + (1 -0)]);break;end end break;end end end elseif ((v90==(1871 -(1301 + 557))) or ((1341 + 1576)==(4090 -(502 + 192)))) then local v152=0 + 0 + 0;local v153;local v154;local v155;while true do if ((v152==(0 -0)) or ((1792 -1030)<=(1164 -571))) then v153=v82[v89[1 + 2]];v154=nil;v152=1 + 0;end if ((v152==2) or ((600 + 1274)==(743 + 1169))) then for v203=1690 -((782 -(61 + 591)) + 65 + 1494),v89[13 -9] do local v204=0 -0;local v205;local v206;local v207;while true do if (((5891 -(58 + 1204))>=521) and (v204==(706 -(181 + 524)))) then v207=nil;while true do if (((5112 -2822)<(176 + 4213)) and (v205==((1561 -(1202 + 359)) -0))) then local v245=0 + 0;while true do if ((855<(8661 -3763)) and (v245==(1 + 0))) then v205=4 -3;break;end if (((549 + 4383)<=4998) and (((1800 -(1525 + 275)) + 0)==v245)) then v206=1186 -((1526 -(368 + 88)) + 116);v207=nil;v245=1;end end end if (((2753 -(66 + 113))==2574) and (v205==1)) then while true do if ((v206==(0 + 0)) or ((12731 -9309)>(4179 -(38 + 350 + 226)))) then local v256=1677 -((2687 -(606 + 415)) + 11);while true do if (((292 + 80)<=(1810 -(34 + 17))) and (v256==(180 -(168 + 12)))) then local v264=1008 -(491 + 517);while true do if ((v264==(1 + 0)) or (((2081 + 2047) -(1200 + 18))>(2187 + 1656))) then v256=(1 + 0) -0;break;end if ((v264==(581 -(218 + 363))) or ((12467 -9104)==(185 + 592))) then v66=v66 + (3 -2);v207=v80[v66];v264=964 -(377 + 586);end end end if (((1965 + 642)>=(73 + 301)) and (v256==(1961 -(703 + 1257)))) then v206=2 -1;break;end end end if (((556 + 2044)>(65 + 63 + 1089)) and (v206==1)) then if ((v207[1219 -((1200 -(467 + 603)) + (1868 -780))]==(836 -(746 + 86))) or ((1512 -(58 + 212))==(4571 -(1400 + 85)))) then v155[v203-1]={v87,v207[3]};else v155[v203-(2 -1)]={v36,v207[833 -(676 + 154)]};end v86[ #v86 + 1 + 0]=v155;break;end end break;end end break;end if (((824 + 408 + 62)>(46 + 25)) and (v204==(0 + 0))) then v205=0;v206=nil;v204=1 + 0;end end end v87[v89[2 + 0]]=v29(v153,v154,v37);break;end if ((((244 + 392) -267)<(4971 -2928)) and (v152==(744 -(343 + 400)))) then v155={};v154=v9({},{__index=function(v208,v209)local v217=1829 -(192 + 1637);local v218;local v219;while true do if ((v217==1) or (4181==(4190 -(104 + 1244)))) then while true do if ((2563<=((17644 -10723) -3005)) and (v218==(272 -(109 + 163)))) then v219=v155[v209];return v219[1 + 0][v219[2]];end end break;end if ((v217==0) or (1318>=(6230 -(1546 + 75)))) then v218=0 + 0 + 0;v219=nil;v217=333 -(237 + 95);end end end,__newindex=function(v210,v211,v212)local v220=0 + 0 + 0;local v221;local v222;while true do if (((2474 + 1245)==(892 + 2827)) and (v220==(1 + 0))) then while true do if (((2587 -1761)<=(9920 -6391)) and (v221==(0 + 0))) then v222=v155[v211];v222[804 -(503 + 300)][v222[2 + (621 -(9 + 612))]]=v212;break;end end break;end if ((v220==(0 -0)) or ((5874 -((536 -358) + 1496))<(5128 -(1357 + 4 + 52)))) then v221=0 + 0;v222=nil;v220=3 -2;end end end});v152=1225 -(909 + 314);end end else local v156=0 + 0;local v157;local v158;local v159;local v160;while true do if ((v156==(2 -1)) or ((407 + 869)>=(3708 -(498 + 504)))) then v159=nil;v160=nil;v156=90 -(14 + 74);end if (((973 -(846 + 127))==v156) or ((8042 -4056)>=((1189 -(55 + 298)) + 3718))) then v157=0;v158=nil;v156=935 -(894 + 40);end if (((5693 -2078)>1522) and (v156==(1 + 1))) then while true do if ((v157==((1 + 0) -0)) or ((2520 + 382)<179)) then v160=nil;while true do if ((v158==(4 -3)) or (2985>=(6792 -2320))) then for v246=2 -1, #v86 do local v247=0;local v248;local v249;while true do if (((9344 -4376)>=(1677 -(18 + 11 + 29))) and (v247==(2 -1))) then while true do if ((v248==0) or (((4872 -(243 + 19)) -((78 -57) + 410))>4290)) then v249=v86[v246];for v265=1152 -(297 + 855), #v249 do local v266=0;local v267;local v268;local v269;local v270;while true do if ((v266==2) or ((580 + 2664)<(290 + 2411))) then while true do if ((3942>(4252 -(500 + 129))) and (v267==(416 -(304 + 111)))) then v270=v268[2];if (((v269==v87) and (v270>=v159)) or ((1382 -(72 + 787))>(2591 -(1510 + 93)))) then local v272=0 + 0;local v273;while true do if ((v272==(0 + 0)) or ((3244 -(1615 + 441))>4828)) then v273=0 + (1177 -(942 + 235));while true do if ((((2485 + 3545) -3370)>=1386) and (v273==(0 -0))) then v160[v270]=v269[v270];v268[1831 -(1190 + 640)]=v160;break;end end break;end end end break;end if (((5837 -1414)>=(4237 -(78 + 195))) and (v267==(0 -0))) then local v271=0;while true do if ((v271==(1 + 0)) or ((5598 -1719)>=(5533 -(470 + 578)))) then v267=1755 -(1557 + 197);break;end if ((v271==(1687 -(310 + 1377))) or ((3779 -1788)>=(1945 + 55))) then v268=v249[v265];v269=v268[1 -0];v271=3 -2;end end end end break;end if (((2167 -(159 + (1030 -(31 + 194))))<=((6488 -2700) + 185)) and (v266==(1 + 0))) then v269=nil;v270=nil;v266=1521 -(442 + 1077);end if ((v266==(0 -0)) or ((2601 -1883)<=(1670 -(441 + 599)))) then v267=(0 -0) -0;v268=nil;v266=1 + 0;end end end break;end end break;end if ((v247==(0 + 0)) or ((644 + 1324)>(6667 -(1260 + 316 + 172)))) then local v258=0 -0;while true do if (((1618 -((218 -172) + 179))<=(12351 -9173)) and (v258==(3 -2))) then v247=1 + 0;break;end if (((2942 -(5709 -3729))<(3400 -(455 + 214))) and (v258==((0 + 0) -0))) then v248=0 -0;v249=nil;v258=1;end end end end end break;end if (((1572 + 3241)==(3768 + 1045)) and ((36 -(23 + 13))==v158)) then local v243=1643 -(1464 + 179);while true do if (((7622 -3015)==((8297 -(1147 + 807)) -(908 + 828))) and (v243==(1875 -(1427 + 447)))) then v158=1;break;end if (((5 + 711)<1879) and (v243==(1327 -((2222 -(127 + 1135)) + 367)))) then local v255=0 -0;while true do if ((v255==(0 -0)) or (3157==((13473 -8482) -(307 + 423 + (386 -247))))) then v159=v89[1 + 1];v160={};v255=1;end if ((v255==(1975 -(1759 + 215))) or ((3695 -(87 + 37))<(5059 -3240))) then v243=1;break;end end end end end end break;end if (((3491 -810)>=(1174 + 320)) and (v157==(0 -0))) then v158=1197 -(981 + 162 + 54);v159=nil;v157=164 -(68 + 95);end end break;end end end elseif ((v90<=(68 -46)) or ((1274 + 1124)==(126 + 332))) then if ((v90<=(18 + 0)) or ((4602 -(1629 + 1596))>=((6522 -2236) -1427))) then if ((3575>=2638) and (v90<=16)) then if (((4561 -1916)<=((34427 -23263) -7333)) and (v90==((8 + 13) -6))) then if ((v89[(1 -0) + 1]==v87[v89[1868 -(1124 + 740)]]) or ((1272 + 232)>(4230 -2540))) then v66=v66 + 1;else v66=v89[2 + 1];end else local v161=0;local v162;local v163;local v164;local v165;while true do if ((730==(2212 -1482)) and (v161==(1 + 0))) then v67=(v164 + v162) -(4 -3);v165=0 -0;v161=1 + 1;end if ((v161==(2 + 0)) or ((1875 + 569)<(2625 -1916))) then for v213=v162,v67 do local v214=(7174 -5516) -(448 + 1210);local v215;while true do if (((1691 -(430 + 629))<=(1846 -826)) and (v214==0)) then v215=0 -(744 -(48 + 696));while true do if ((v215==((0 -0) + 0)) or ((1040 + 757)<(916 + 283))) then v165=v165 + 1 + 0 + 0;v87[v213]=v163[v165];break;end end break;end end end break;end if (((1868 -(845 + 1023))==v161) or ((5936 -(24 + 1185))>=(14324 -9357))) then local v197=1859 -(1682 + 177);while true do if ((v197==(1 -(0 + 0))) or ((15233 -11091)<2919)) then v161=348 -(214 + 133);break;end if ((v197==(0 -0)) or (((21072 -(469 + 163)) -16099)<(8278 -6256))) then v162=v89[6 -4];v163,v164=v84(v87[v162](v12(v87,v162 + 1 + 0 + 0,v89[3])));v197=1;end end end end end elseif (((12862 -(560 + 7597))>(2641 -(16 + 75))) and (v90>17)) then local v166=0 + 0;local v167;local v168;local v169;local v170;while true do if (((1 + 1)==v166) or ((1067 + 303)>=4758)) then while true do if ((v167==((313 + 318) -(23 + (1186 -578)))) or (((7001 -4145) -(426 + 799))==(5877 -(6280 -2816)))) then v168=v89[2 + 0 + 0];v169={v87[v168](v12(v87,v168 + 1 + 0,v67))};v167=(2 -1) -0;end if ((v167==(1 -0)) or ((2301 + 763)>=(201 + 3764))) then v170=0;for v236=v168,v89[4 + 0] do local v237=0 + 0;local v238;while true do if (((1562 -(501 + 21))<4165) and (v237==(971 -(459 + 512)))) then v238=1489 -(552 + 937);while true do if ((v238==0) or ((2181 -(660 + 149 + 222))==(6035 -(54 + 1594)))) then v170=v170 + (711 -(18 + 692));v87[v236]=v169[v170];break;end end break;end end end break;end end break;end if (((1398 + 111)>(808 -(26 + 68))) and (v166==((1584 -(519 + 1065)) + 0))) then v167=892 -(780 + 112);v168=nil;v166=2 -1;end if (((844 + 3728)==(9539 -4967)) and ((1580 -(1019 + 560))==v166)) then v169=nil;v170=nil;v166=2;end end else do return;end end elseif (((1841 -(72 + 1737))<=(1380 -897)) and (v90<=(1760 -(1292 + 448)))) then if (((2408 -931)<(4610 + 31)) and (v90>19)) then local v171=0;local v172;local v173;while true do if ((v171==(4 -3)) or ((9511 -4553)<=(1852 + 2610))) then while true do if (((670 + 291)>=(1159 -(364 + 771))) and (v172==(0 -0))) then v173=v89[6 -4];v87[v173]=v87[v173](v12(v87,v173 + ((952 -(25 + 42)) -(290 + 594)),v67));break;end end break;end if (((1810 + 70)==(4775 -2895)) and ((0 -0)==v171)) then v172=0 + (1815 -(284 + 1531));v173=nil;v171=1 + (0 -0);end end elseif ((1649<=(4872 -(80 + 610))) and v87[v89[2]]) then v66=v66 + 1;else v66=v89[3];end elseif ((v90>(21 + 0)) or ((2993 + (251 -143))>=((4065 + 1235) -(984 + 518)))) then if ((v87[v89[2]]==v89[4]) or ((5399 -(1277 + 462))>(17677 -13826))) then v66=v66 + (1195 -(1104 + 90));else v66=v89[2 + 1];end else v87[v89[1008 -(447 + 559)]][v89[(1482 -(435 + 1040)) -4]]=v89[1763 -(982 + 777)];end elseif ((v90<=(6 + 20)) or (3618<(3019 -996))) then if ((3516<(5627 -(26 + 691))) and (v90<=24)) then if (((1313 -988)<4841) and (v90>(14 + 9))) then v87[v89[2]]();else local v175=0 -0;local v176;local v177;while true do if (((1976 -(1720 + 75))<=(597 + 963)) and ((2 -1)==v175)) then while true do if (((120 + 2469)==(3861 -(489 + 783))) and (v176==(621 -(316 + 305)))) then v177=v89[1495 -(871 + 622)];v87[v177](v12(v87,v177 + 1,v89[2 + 1]));break;end end break;end if ((v175==(0 + 0)) or ((2198 + 917)<=(3261 -(266 + 111)))) then v176=1109 -(285 + (1498 -(215 + 459)));v177=nil;v175=4 -3;end end end elseif ((816<=1549) and (v90==25)) then v87[v89[2 + 0]]={};else local v179=0;local v180;local v181;local v182;local v183;local v184;local v185;while true do if (((1822 + 882)==(57 + 2647)) and (v179==(9 -6))) then while true do if ((v180==(4 -2)) or ((8675 -(26257 -20085))==432)) then local v230=693 -(42 + 651);local v231;while true do if ((v230==((2487 -1794) -((2200 -1578) + 71))) or ((1092 -(195 + 58))>(974 + 3078))) then v231=261 -(183 + 78);while true do if ((v231==(0 + 0)) or (3326>(11026 -(11749 -4481)))) then for v260=1755 -(999 + 755),v182 do v87[v183 + v260]=v184[v260];end v185=v184[1];v231=3 -2;end if ((v231==((2901 -(224 + 1684)) -(755 + 237))) or (87>(6468 -(497 + 1418)))) then v180=1611 -(1509 + 99);break;end end break;end end end if (((1972 -764)<=2202) and (v180==(3 + 0))) then if (((3063 -(924 + 408))>=210) and v185) then local v239=0 -0;while true do if (((7646 -(3504 -(517 + 8)))>=(15135 -10526)) and (v239==(0 + 0))) then v87[v183]=v185;v66=v89[3];break;end end else v66=v66 + 1 + 0;end break;end if (((3166 -(672 + 509))==(279 + 1706)) and (v180==(1109 -(37 + 1072)))) then local v232=0 -0;while true do if ((v232==1) or ((2457 -(49 + 88))<=(1615 -(40 + 111)))) then v180=868 -(293 + 508 + 66);break;end if (((3126 + 751)<(5700 -(701 + 315))) and (v232==(251 -(182 + 69)))) then v181=v89[2 + 0];v182=v89[4];v232=1;end end end if ((v180==(4 -(189 -(4 + 182)))) or ((9200 -5294)<=(4664 -(792 + 1172)))) then local v233=0;local v234;while true do if ((v233==(0 -0)) or ((2777 + 1595)<(2951 -1862))) then v234=1868 -(1204 + 664);while true do if ((v234==(0 + 0)) or ((1001 + 92)>(2331 + 334))) then v183=v181 + (1651 -(786 + 39 + 824));v184={v87[v181](v87[v181 + 1],v87[v183])};v234=1 + (194 -(17 + 177));end if ((v234==(2 -1)) or (2476<(94 + 6))) then v180=2 + 0;break;end end break;end end end end break;end if ((v179==(273 -(171 + 101))) or ((4174 -2552)==(9312 -6721))) then v182=nil;v183=nil;v179=115 -(83 + 30);end if (((828 + 2751)>(4483 -2151)) and (0==v179)) then local v198=608 -(17 + 123 + 468);while true do if (((6704 -(709 + (2257 -(817 + 218))))==(573 + 4200)) and (v198==(0 + 0))) then v180=1139 -(1015 + 124);v181=nil;v198=1;end if ((v198==(1305 -(749 + (2303 -1748)))) or ((1211 + 2337)>=4116)) then v179=1 -0;break;end end end if ((3827>(3411 -(281 + 210))) and (v179==(1 + 1))) then v184=nil;v185=nil;v179=3 + 0;end end end elseif ((v90<=(1097 -(965 + 104))) or ((3875 -(28 + 285))>=(4382 -(422 + 194)))) then if ((v90>27) or ((4658 -2390)<=(2993 -(257 + 524)))) then for v188=v89[2 + 0],v89[3 -0] do v87[v188]=nil;end else v87[v89[6 -(13 -9)]]=v29(v82[v89[3 + 0]],nil,v37);end elseif ((v90==((2662 -(519 + 437)) -(1606 + 71))) or ((127 + 571)>=((4610 -2374) + 735))) then v87[v89[2 + 0]][v89[(3651 -(1278 + 611)) -(691 + 1068)]]=v87[v89[10 -6]];else v66=v89[11 -8];end v66=v66 + 1;break;end end break;end end end end v65=3;end if (v65==1) then v68={...};v69=v11("#",...) -1;v65=2;end end end;end return v29(v28(),{},v16)();end if (v17==4) then v27=nil;function v27(...)return {...},v11("#",...);end v28=nil;function v28()local v53=0 + 0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53~=(1 + 1)) then else local v71=175 -(74 + 101);while true do if ((0 + 0)~=v71) then else local v76=357 -(175 + 182);while true do if (v76==0) then for v105=1 + 0,v58 do local v106=1676 -(754 + 922);local v107;local v108;local v109;while true do if (v106==(0 + 0)) then v107=604 -(230 + 374);v108=nil;v106=1 + 0;end if (v106~=(1686 -(288 + 1397))) then else v109=nil;while true do if (v107==(1 + 0)) then if (v108==(2 -1)) then v109=v21()~=0;elseif (v108==2) then v109=v24();elseif (v108==(5 -2)) then v109=v25();end v59[v105]=v109;break;end if (0~=v107) then else local v117=0 -0;local v118;while true do if ((668 -(374 + 294))~=v117) then else v118=1104 -(234 + 870);while true do if (v118~=0) then else v108=v21();v109=nil;v118=1 + 0;end if (v118==(1 + 0)) then v107=1;break;end end break;end end end end break;end end end v57[810 -(44 + 763)]=v21();v76=1;end if ((1 + 0)~=v76) then else v71=2 -1;break;end end end if (v71==(3 -2)) then for v91=1 + 0,v23() do local v92=0 -0;local v93;local v94;while true do if (v92~=0) then else v93=0 + 0;v94=nil;v92=1;end if (v92~=(2 -1)) then else while true do if (v93==(0 -0)) then v94=v21();if (v20(v94,2 -1,1 + 0)==0) then local v111=0;local v112;local v113;local v114;local v115;while true do if (v111~=0) then else v112=0 -0;v113=nil;v111=1;end if (v111==(1 -0)) then v114=nil;v115=nil;v111=2;end if (2==v111) then while true do if (v112~=2) then else local v119=0 + 0;while true do if (v119==(1 -0)) then v112=3 + 0;break;end if (v119~=(0 -0)) then else if (v20(v114,1 + 0,1 + 0)==(1 + 0)) then v115[2 + 0]=v59[v115[824 -(484 + 338)]];end if (v20(v114,1 + 1,4 -2)~=1) then else v115[21 -(9 + 9)]=v59[v115[2 + 1]];end v119=3 -2;end end end if (v112~=(1134 -(470 + 661))) then else if (v20(v114,9 -6,1984 -(1408 + 573))==(2 -1)) then v115[4]=v59[v115[4]];end v54[v91]=v115;break;end if (v112==(2 -1)) then local v121=560 -(47 + 513);while true do if (v121~=(1 + 0)) then else v112=3 -1;break;end if (v121==(588 -(581 + 7))) then v115={v22(),v22(),nil,nil};if (v113==(0 -0)) then local v192=0;local v193;while true do if (v192~=0) then else v193=0;while true do if (v193==(0 -0)) then v115[2 + 1]=v22();v115[11 -7]=v22();break;end end break;end end elseif (v113==1) then v115[3]=v23();elseif (v113==(9 -7)) then v115[1340 -(880 + 457)]=v23() -((5 -3)^(64 -48));elseif (v113==3) then local v242=0 + 0;while true do if (v242==(0 + 0)) then v115[3]=v23() -(2^(78 -62));v115[1185 -(1030 + 151)]=v22();break;end end end v121=1324 -(83 + 1240);end end end if (v112~=(885 -(402 + 483))) then else local v122=0 + 0;local v123;while true do if (v122==0) then v123=0 -0;while true do if (v123==(1 + 0)) then v112=2 -1;break;end if (v123~=0) then else local v199=0;while true do if (v199~=(585 -(562 + 23))) then else v113=v20(v94,2 + 0,10 -7);v114=v20(v94,4,507 -(391 + 110));v199=1 + 0;end if (v199~=(2 -1)) then else v123=1069 -(713 + 355);break;end end end end break;end end end end break;end end end break;end end break;end end end v53=1 + 2;break;end end end if ((850 -(331 + 516))~=v53) then else local v72=1253 -(556 + 697);while true do if (v72~=(1 + 0)) then else return v57;end if (v72==(228 -(93 + 135))) then for v95=1,v23() do v55[v95-(1 + 0)]=v28();end for v97=1 + 0,v23() do v56[v97]=v23();end v72=1;end end end if ((0 -0)~=v53) then else local v73=0 -0;while true do if (v73~=(0 + 0)) then else local v77=0;while true do if (v77==(1059 -(195 + 864))) then v54={};v55={};v77=1;end if (v77~=(211 -(152 + 58))) then else v73=1608 -(1108 + 499);break;end end end if (v73~=(4 -3)) then else v56={};v53=1 -0;break;end end end if (v53~=1) then else local v74=0;while true do if (v74~=(1 -0)) then else v59={};v53=2;break;end if (v74==(1678 -(153 + 1525))) then local v78=0;while true do if (v78~=(0 -0)) then else v57={v54,v55,nil,v56};v58=v23();v78=1 + 0;end if (v78==(1 + 0)) then v74=1 + 0;break;end end end end end end end v17=5;end end end vv8());end
